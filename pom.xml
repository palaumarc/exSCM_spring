<project xmlns="http://maven.apache.org/POM/4.0.0" 
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <groupId>cat.meteo</groupId>
    <version>0.0.1</version>
    <packaging>war</packaging>

    <artifactId>cat.meteo.exercici</artifactId>
    <name>apiREST</name>
    <description>Exercici API REST</description>

     <properties>
        <java-version>1.8</java-version>
        <spring.version>3.2.2.RELEASE</spring.version>
        <netbeans.hint.deploy.server>Tomcat</netbeans.hint.deploy.server>
    </properties>
    
    <dependencies>
        <!-- Spring -->
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-context</artifactId>
            <version>${spring.version}</version>
            <exclusions>
                <!-- Exclude Jakarta Commons Logging in favor of SLF4j.
                Commons Logging es la que fa servir Spring per defecte. 
                Si volem veure el log d'spring jdbctemplate etc amb logback s'ha de fer aquest canvi -->
                <exclusion>
                    <groupId>commons-logging</groupId>
                    <artifactId>commons-logging</artifactId>
                </exclusion>
            </exclusions>
        </dependency>
        
        <!-- Per migrar de Jakarta Commons Logging a Slf4j -->
        <dependency>
            <groupId>org.slf4j</groupId>
            <artifactId>jcl-over-slf4j</artifactId>
            <version>1.7.2</version>
            <scope>runtime</scope>
        </dependency>
        
        <!-- logger: logback -->
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-core</artifactId>
            <version>1.0.9</version>
        </dependency>
        <dependency>
            <groupId>ch.qos.logback</groupId>
            <artifactId>logback-classic</artifactId>
            <version>1.0.9</version>
        </dependency>
        
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-webmvc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-jdbc</artifactId>
            <version>${spring.version}</version>
        </dependency>
        <dependency>
            <groupId>org.springframework</groupId>
            <artifactId>spring-test</artifactId>
            <version>${spring.version}</version>
            <scope>test</scope>
        </dependency>
        
        <!-- Swagger documentation -->
        <dependency>
            <groupId>com.mangofactory</groupId>
            <artifactId>swagger-springmvc</artifactId>
            <version>1.0.2</version>
        </dependency>
        <dependency>
            <groupId>com.fasterxml.jackson.core</groupId>
            <artifactId>jackson-databind</artifactId>
            <version>2.4.4</version>
        </dependency>
        <dependency>
            <groupId>joda-time</groupId>
            <artifactId>joda-time</artifactId>
            <version>2.2</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.google.code.gson</groupId>
            <artifactId>gson</artifactId>
            <version>2.6.2</version>
            <type>jar</type>
        </dependency>
        <dependency>
            <groupId>com.jayway.restassured</groupId>
            <artifactId>rest-assured</artifactId>
            <version>2.9.0</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>4.12</version>
            <scope>test</scope>
        </dependency>
        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-core</artifactId>
            <version>1.3</version>
            <scope>test</scope>
        </dependency>
    </dependencies>
    
    <!-- Perfils segons entorn de desplegament -->
    <profiles>
        <profile>
            <id>dev</id>
            <properties>
                <targetenv>dev</targetenv>
            </properties>
        </profile>
        <profile>
            <id>pro</id>
            <properties>
                <targetenv>pro</targetenv>
            </properties>
        </profile>
    </profiles>
    
    <build>
        
        <filters>
            <filter>src/main/resources/filter/filter.${targetenv}.properties</filter>
        </filters>
        
        <plugins>
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-war-plugin</artifactId>
                <version>2.3</version> 
                <configuration>
                    <webXml>src/main/webapp/WEB-INF/web.xml</webXml>
                    <webResources>
                        
                        <!-- Filtrem logback.xml -->
                        <resource>
                            <!--
                            Maven filtrará contenido del directorio 'src/main/resources', concretamente usará el filtro definido 
                            previamente para rellenar el archivo 'logback.xml', con los valores de las variables del archivo
                            'config.${targetenv}.properties'.
                            Una vez filtra el archivo, lo meterá en el directorio especificado como destino: WEB-INF/classes
                            -->
                            <directory>${basedir}/src/main/resources</directory>
                            <filtering>true</filtering>
                            <includes>
                                <include>**/logback.xml</include>
                                <include>**/Global.properties</include>                                
                            </includes>
                            <targetPath>WEB-INF/classes</targetPath>
                        </resource>

                    </webResources>
                </configuration>
            </plugin>
            
            <!-- uso surefire para que los tests no se ejecuten en build-->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-surefire-plugin</artifactId>
                <version>2.11</version>
                <configuration>
                    <excludes>
                        <!-- excluyo tests de todas las apis ya que es necesario ejecutarlos una vez la 
                        aplicación está desplegada -->
                        <exclude>cat/meteo/exercise/urlcalls/UrlCallsPrediccioTest.java</exclude>
                    </excludes>
                </configuration>
            </plugin>
            
        </plugins>
    </build>

</project>